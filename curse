#!/usr/bin/env ruby

# CURSES
# Pulls a random curse word out of a curses dictionary and displays it on the
# screen

require "optparse"
require "./colorize"

# Some setting defaults:
@source_name = "curses_standard.dict"
@infinite = false
@talk = false

optparse = OptionParser.new do |opts|
  opts.banner = "Curses! Command-Line Swear Words\nUsage: curse [options]"
  opts.on("-u", "--unabridged", "Use unabridged swear dictionary") { @source_name = "curses_unabridged.dict" }
  opts.on("-f", "--forever", "Continually output curses in a stream") { @infinite = true }
  opts.on("-s", "--talk", "Speak the curses as they are output") { @talk = true }
  opts.on("-h", "--help", "Display this usage screen") do
    puts opts
    exit 0
  end
end
optparse.parse!

# Prepare our curse dictionary:
@source = File.join(File.dirname(__FILE__), @source_name)
File.open(@source, 'r') {|file| @dict = file.readlines.map(&:strip).map {|w| [w, 0]}.to_h }

# Allow Ctrl-C to safely terminate script:
def end_script()
  n = @dict.values.sum
  u = @dict.select {|k,v| v > 0 }.count
  p = (u.to_f / @dict.length * 100).to_i
  max_word, max_n = @dict.max_by {|k,v| v }
  puts "\n#{n} total and #{u} unique #{n == 1 ? 'curse' : 'curses'} given (#{p}%). '#{max_word}' given most, #{max_n} #{max_n == 1 ? 'time' : 'times'}.\n\n"
  exit 0
end
trap("SIGINT") { end_script() }

# Perform the cursing:
begin
  curse = @dict.keys.sample
  print "#{curse} ".random_color
  $stdout.flush
  `say "#{curse}"` if @talk
  @dict[curse] += 1
  sleep 1 if @infinite
end while @infinite
end_script()
